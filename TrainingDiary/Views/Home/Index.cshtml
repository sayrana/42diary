<script src="~/Scripts/knockout-3.4.0.js"></script>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>

<div data-bind="foreach: users">
    <h3 data-bind="text: $data.Name"></h3>
    <div><input type="text" data-bind="value: $data.Id" /> </div>
    <input type="button" value="Update" data-bind="click: $root.update" />
    <input type="button" value="Remove Item" data-bind="click: $root.remove" />
</div>

<hr />

<form data-bind="submit: create">
    <div>First Name:</div>
    <div><input type="text" name="FirstName" /></div>
    <div>Last Name:</div>
    <div><input type="text" name="LastName" /></div>
    <div>Age:</div>
    <div><input type="text" name="Age" /></div>
    <button type="submit">Add</button>
</form>


@section scripts
{
    <script language="javascript">

        //When the DOM is loaded, call the ko.applyBindings() and pass in a new instance of the UsersViewModel:
        $(document).ready(function () {
            ko.applyBindings(new UsersViewModel());
        });

        //Create a user view-model class:
        function UsersViewModel() {

            var self = this;
            var baseUri = "http://localhost:64516//api/users";
            self.users = ko.observableArray(); // Init an empty observable array

            self.create = function (formElement) {
                $.post(baseUri, $(formElement).serialize(), null, "json")
                    .done(function (o) {
                        self.users.push(o);
                    });
            }
            self.update = function (user) {
                $.ajax({
                    type: "PUT",
                    url: baseUri,
                    data: user
                });
            }
            self.remove = function (user) {
                // First remove from the server, then from the view-model.
                $.ajax({
                    type: "DELETE",
                    url: baseUri + '/' + user.Id
                }).done(function () {
                    self.users.remove(user);
                });
            }

            // Adds the value and notifies observers
            $.getJSON(baseUri, self.users);
        }
    </script>
}
